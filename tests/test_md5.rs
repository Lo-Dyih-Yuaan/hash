#[macro_use] mod assert;
use hash::md5::md5;
#[test]
fn test_md5() {
	// RFC 1321
	assert_hash!(md5, b"", "d41d8cd98f00b204e9800998ecf8427e");
	assert_hash!(md5, b"a", "0cc175b9c0f1b6a831c399e269772661");
	assert_hash!(md5, b"abc", "900150983cd24fb0d6963f7d28e17f72");
	assert_hash!(md5, b"message digest", "f96b697d7cb7938d525a2f31aaf161d0");
	assert_hash!(md5, b"abcdefghijklmnopqrstuvwxyz", "c3fcd3d76192e4007dfb496cca67e13b");
	assert_hash!(md5, b"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", "d174ab98d277d9f5a5611c2c9f419d9f");
	assert_hash!(md5, b"12345678901234567890123456789012345678901234567890123456789012345678901234567890", "57edf4a22be3c955ac49da2e2107b67a");
	// Wang, Xiaoyun; Feng, Dengguo; Lai, Xuejia; Yu, Hongbo. Collisions for Hash Functions MD4, MD5, HAVAL-128 and RIPEMD.
	assert_collision!(md5, b"\xd1\x31\xdd\x02\xc5\xe6\xee\xc4\x69\x3d\x9a\x06\x98\xaf\xf9\x5c\x2f\xca\xb5\x87\x12\x46\x7e\xab\x40\x04\x58\x3e\xb8\xfb\x7f\x89\x55\xad\x34\x06\x09\xf4\xb3\x02\x83\xe4\x88\x83\x25\x71\x41\x5a\x08\x51\x25\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd\xf2\x80\x37\x3c\x5b\x96\x0b\x1d\xd1\xdc\x41\x7b\x9c\xe4\xd8\x97\xf4\x5a\x65\x55\xd5\x35\x73\x9a\xc7\xf0\xeb\xfd\x0c\x30\x29\xf1\x66\xd1\x09\xb1\x8f\x75\x27\x7f\x79\x30\xd5\x5c\xeb\x22\xe8\xad\xba\x79\xcc\x15\x5c\xed\x74\xcb\xdd\x5f\xc5\xd3\x6d\xb1\x9b\x0a\xd8\x35\xcc\xa7\xe3", b"\xd1\x31\xdd\x02\xc5\xe6\xee\xc4\x69\x3d\x9a\x06\x98\xaf\xf9\x5c\x2f\xca\xb5\x07\x12\x46\x7e\xab\x40\x04\x58\x3e\xb8\xfb\x7f\x89\x55\xad\x34\x06\x09\xf4\xb3\x02\x83\xe4\x88\x83\x25\xf1\x41\x5a\x08\x51\x25\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd\x72\x80\x37\x3c\x5b\x96\x0b\x1d\xd1\xdc\x41\x7b\x9c\xe4\xd8\x97\xf4\x5a\x65\x55\xd5\x35\x73\x9a\x47\xf0\xeb\xfd\x0c\x30\x29\xf1\x66\xd1\x09\xb1\x8f\x75\x27\x7f\x79\x30\xd5\x5c\xeb\x22\xe8\xad\xba\x79\x4c\x15\x5c\xed\x74\xcb\xdd\x5f\xc5\xd3\x6d\xb1\x9b\x0a\x58\x35\xcc\xa7\xe3");
	assert_collision!(md5, b"\xd1\x31\xdd\x02\xc5\xe6\xee\xc4\x69\x3d\x9a\x06\x98\xaf\xf9\x5c\x2f\xca\xb5\x87\x12\x46\x7e\xab\x40\x04\x58\x3e\xb8\xfb\x7f\x89\x55\xad\x34\x06\x09\xf4\xb3\x02\x83\xe4\x88\x83\x25\x71\x41\x5a\x08\x51\x25\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd\xf2\x80\x37\x3c\x5b\xd8\x82\x3e\x31\x56\x34\x8f\x5b\xae\x6d\xac\xd4\x36\xc9\x19\xc6\xdd\x53\xe2\xb4\x87\xda\x03\xfd\x02\x39\x63\x06\xd2\x48\xcd\xa0\xe9\x9f\x33\x42\x0f\x57\x7e\xe8\xce\x54\xb6\x70\x80\xa8\x0d\x1e\xc6\x98\x21\xbc\xb6\xa8\x83\x93\x96\xf9\x65\x2b\x6f\xf7\x2a\x70", b"\xd1\x31\xdd\x02\xc5\xe6\xee\xc4\x69\x3d\x9a\x06\x98\xaf\xf9\x5c\x2f\xca\xb5\x07\x12\x46\x7e\xab\x40\x04\x58\x3e\xb8\xfb\x7f\x89\x55\xad\x34\x06\x09\xf4\xb3\x02\x83\xe4\x88\x83\x25\xf1\x41\x5a\x08\x51\x25\xe8\xf7\xcd\xc9\x9f\xd9\x1d\xbd\x72\x80\x37\x3c\x5b\xd8\x82\x3e\x31\x56\x34\x8f\x5b\xae\x6d\xac\xd4\x36\xc9\x19\xc6\xdd\x53\xe2\x34\x87\xda\x03\xfd\x02\x39\x63\x06\xd2\x48\xcd\xa0\xe9\x9f\x33\x42\x0f\x57\x7e\xe8\xce\x54\xb6\x70\x80\x28\x0d\x1e\xc6\x98\x21\xbc\xb6\xa8\x83\x93\x96\xf9\x65\xab\x6f\xf7\x2a\x70");
	// Xie, Tao; Feng, Dengguo. Construct MD5 Collisions Using Just A Single Block Of Message.
	assert_collision!(md5, b"\x0e\x30\x65\x61\x55\x9a\xa7\x87\xd0\x0b\xc6\xf7\x0b\xbd\xfe\x34\x04\xcf\x03\x65\x9e\x70\x4f\x85\x34\xc0\x0f\xfb\x65\x9c\x4c\x87\x40\xcc\x94\x2f\xeb\x2d\xa1\x15\xa3\xf4\x15\x5c\xbb\x86\x07\x49\x73\x86\x65\x6d\x7d\x1f\x34\xa4\x20\x59\xd7\x8f\x5a\x8d\xd1\xef", b"\x0e\x30\x65\x61\x55\x9a\xa7\x87\xd0\x0b\xc6\xf7\x0b\xbd\xfe\x34\x04\xcf\x03\x65\x9e\x74\x4f\x85\x34\xc0\x0f\xfb\x65\x9c\x4c\x87\x40\xcc\x94\x2f\xeb\x2d\xa1\x15\xa3\xf4\x15\xdc\xbb\x86\x07\x49\x73\x86\x65\x6d\x7d\x1f\x34\xa4\x20\x59\xd7\x8f\x5a\x8d\xd1\xef");
	// Stevens, Marc. Single-block collision for MD5.
	assert_collision!(md5, b"M\xc9h\xff\x0e\xe3\\ \x95r\xd4w{r\x15\x87\xd3o\xa7\xb2\x1b\xdcV\xb7J=\xc0x>{\x95\x18\xaf\xbf\xa2\0\xa8(K\xf3n\x8eKU\xb3_Bu\x93\xd8Igm\xa0\xd1U]\x83`\xfb_\x07\xfe\xa2", b"M\xc9h\xff\x0e\xe3\\ \x95r\xd4w{r\x15\x87\xd3o\xa7\xb2\x1b\xdcV\xb7J=\xc0x>{\x95\x18\xaf\xbf\xa2\x02\xa8(K\xf3n\x8eKU\xb3_Bu\x93\xd8Igm\xa0\xd1\xd5]\x83`\xfb_\x07\xfe\xa2");
	// Hash Quine
	assert_hash!(md5, include_bytes!("md5.gif"), "f5ca4f935d44b85c431a8bf788c0eaca");

}
